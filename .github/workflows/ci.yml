name: CI

on:
  push:
    branches: ["main", "dev"]
    tags:
      - "*"
  workflow_dispatch:

jobs:
  secrets-scan:
    name: Trufflehog - Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install trufflehog
        run: |
          python -m pip install --upgrade pip
          pip install trufflehog
      - name: Run TruffleHog for secrets scanning
        run: trufflehog --regex --entropy=False .

  pylint:
    name: Pylint - Python Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Run Pylint for Code Quality
        run: |
          set -e
          FILES=$(git ls-files '*.py')
          if [ -z "$FILES" ]; then
            echo "No Python files to lint."
            exit 0
          fi
          pylint --fail-under=7 $FILES

  bandit:
    name: Bandit - Python Security Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit
      - name: Run Bandit for Code Security
        run: bandit -lll -r .

  publish:
    name: Publish to PyPI
    environment: Pypi
    needs: [secrets-scan, pylint, bandit]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Bump version from tag
        run: |
          VERSION="${GITHUB_REF_NAME}"
          sed -i "s/0.0.0-dev/${VERSION}/g" pyproject.toml
          sed -i "s/0.0.0-dev/${VERSION}/g" qalita_core/utils.py
      - name: Build package
        run: poetry build
      - name: Publish package to PyPI
        env:
          PYPI_PUBLISH_USER: ${{ secrets.PYPI_PUBLISH_USER }}
          PYPI_PUBLISH_PASSWORD: ${{ secrets.PYPI_PUBLISH_PASSWORD }}
        run: poetry publish --username "$PYPI_PUBLISH_USER" --password "$PYPI_PUBLISH_PASSWORD" --skip-existing


